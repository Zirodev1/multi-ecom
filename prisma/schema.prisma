generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/client"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

enum Role {
  USER
  ADMIN
  SELLER
}
model User {
  id       String @id @default(uuid())
  name     String
  email    String @unique
  imageUrl String @db.Text
  role     Role   @default(USER)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  shops Shop[] @relation("UserShops")
}

model Category {
  id       String  @id @default(uuid())
  name     String
  image    String
  url      String @unique
  featured Boolean @default(false)

  subCategories SubCategory[] @relation("CategoryToSubcategory")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model SubCategory {
  id       String  @id @default(uuid())
  name     String
  image    String
  url      String @unique
  featured Boolean @default(false)

  categoryId String
  category Category @relation("CategoryToSubcategory", fields: [categoryId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([categoryId])
}

enum ShopStatus {
  PENDING
  ACTIVE
  BANNED
  DISABLED
  VACTION
}

model Shop {
  id String @id @default(uuid())
  name String
  description String @db.Text
  email String @unique
  phone String
  url String @unique
  logo String
  cover String
  status ShopStatus @default(PENDING)
  averageRating Float @default(0)
  featured Boolean @default(false)
  returnPolicy String?
  defaultShippingService String?
  defaultShippingFees Float?
  defaultDeliveryTimeMin Int?
  defaultDeliveryTimeMax Int?

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  userId String

  user User @relation("UserShops", fields: [userId], references: [id])

  @@index([userId])
}

